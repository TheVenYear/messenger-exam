{"version":3,"sources":["apis/index.js","apis/auth.api.js","store/reducers/app.reducer.js","components/header/index.js","components/header/header.jsx","apis/messages.api.js","components/message/index.js","components/message/message.jsx","components/chat/index.js","components/chat/chat.jsx","components/login/index.js","components/login/login.jsx","components/private-route/index.js","components/private-route/private-route.jsx","components/thumb/index.js","components/thumb/thumb.jsx","components/user-form/user-form.jsx","components/user-form/index.js","components/change-user/index.js","components/change-user/change-user.jsx","components/sign-up-user/sign-up-user.jsx","components/content/index.js","components/content/content.jsx","components/app/index.js","components/app/app.jsx","bin/report-web-vitals.js","store/reducers/index.js","store/index.js","index.jsx"],"names":["serverURL","CONFIG","baseURL","withCredentials","validateStatus","status","transformResponse","response","transformed","JSON","parse","errors","length","newData","data","forEach","error","Object","keys","key","push","instance","axios","create","setInterceptor","setUser","interceptors","use","a","request","url","method","config","fetchSignIn","post","fetchSignUp","formData","headers","me","get","fetchChangeProfile","fetchLogout","SET_USER","SET_IS_INITIALIZED","initialState","user","isInitialized","appReducer","state","action","type","payload","setIsInitialized","logout","dispatch","Header","useSelector","app","useDispatch","theme","useTheme","AppBar","color","Container","maxWidth","Toolbar","disableGutters","variant","Box","display","width","justifyContent","alignItems","Icon","Typography","align","fontWeight","Link","component","NavLink","to","palette","background","default","onClick","style","cursor","marginRight","Avatar","src","profile","avatar","alt","height","sendMessage","message","Message","Card","elevation","CardActionArea","CardHeader","title","nickname","email","subheader","fontSize","wordWrap","moment","postedAt","format","CardContent","text","Chat","useState","messages","setMessages","simpleBarRef","useRef","form","useFormik","initialValues","validationSchema","yup","required","onSubmit","scrollTop","scroll","current","getScrollElement","scrollTo","top","scrollHeight","behavior","useEffect","socket","io","on","messagesParam","ref","map","el","index","margin","CardActions","disableSpacing","handleSubmit","TextField","fullWidth","name","value","values","onChange","handleChange","size","Button","endIcon","Login","password","setErrors","console","log","FormGroup","helperText","label","FormControl","mx","textAlign","global","Alert","severity","PrivateRoute","children","props","Thumb","image","setSrc","Blob","reader","FileReader","onloadend","result","readAsDataURL","UserForm","helperValues","onFinish","FormData","append","touched","placeholder","mask","phone","maskChar","accept","id","e","setFieldValue","currentTarget","files","multiple","htmlFor","defaultProps","ChangeUser","meResponse","changeProfile","mt","SignUpUser","min","history","Content","marginTop","mb","path","App","setTimeout","isDark","useMediaQuery","createMuiTheme","primary","main","orange","secondary","grey","overrides","MuiButton","sizeSmall","MuiTextField","MuiFormControl","locale","ThemeProvider","CssBaseline","Grid","container","justify","minHeight","item","CircularProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","window","getState"],"mappings":"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","file":"static/js/main.ad6cd997.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const serverURL =\n  (process.env.NODE_ENV === 'production' &&\n    'https://thevenyear.github.io/messenger-exam/') ||\n  '';\nexport const CONFIG = {\n  baseURL: serverURL + 'api/',\n  withCredentials: true,\n  validateStatus: (status) => status < 500,\n  transformResponse: (response) => {\n    const transformed = JSON.parse(response);\n    if (transformed.errors.length < 1) {\n      return transformed;\n    }\n    const newData = { data: transformed.data, errors: {} };\n\n    transformed.errors.forEach((error) => {\n      Object.keys(error).forEach((key) => {\n        if (!newData.errors[key]) {\n          newData.errors[key] = [];\n        }\n\n        newData.errors[key].push(error[key]);\n      });\n    });\n\n    return newData;\n  },\n};\n\nconst instance = axios.create(CONFIG);\n\nexport const setInterceptor = (setUser) => {\n  instance.interceptors.response.use(async (response) => {\n    if (response.status === 401) {\n      const refreshResponse = await axios.request({\n        ...CONFIG,\n        url: 'auth/refresh',\n        method: 'GET',\n      });\n\n      if (refreshResponse.status === 401) {\n        setUser(null);\n        return response;\n      }\n\n      return axios.request(response.config);\n    }\n\n    return response;\n  });\n};\n\nexport default instance;\n","import instance from '.';\n\nexport const fetchSignIn = async (data) => {\n  const response = await instance.post('auth/sign-in', data);\n  return response.data;\n};\n\nexport const fetchSignUp = async (formData) => {\n  const response = await instance.post('auth/sign-up', formData, {\n    headers: { 'content-type': 'multipart/form-data' },\n  });\n  return response.data;\n};\n\nexport const refresh = async () => {\n  const response = await instance.get('auth/refresh');\n  return response.data;\n};\n\nexport const me = async () => {\n  const response = await instance.get('auth/me');\n  return response.data;\n};\n\nexport const fetchChangeProfile = async (formData) => {\n  const response = await instance.post('auth/change-profile', formData, {\n    headers: { 'content-type': 'multipart/form-data' },\n  });\n  return response.data;\n};\n\nexport const fetchLogout = async () => {\n  const response = await instance.post('auth/logout');\n  return response.data;\n};\n","import { setInterceptor } from '../../apis';\nimport { fetchChangeProfile, fetchLogout, me } from '../../apis/auth.api';\n\nconst SET_USER = 'app/user/SET';\nconst SET_IS_INITIALIZED = 'app/isInitialized/SET';\n\nconst initialState = {\n  user: null,\n  isInitialized: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return { ...state, user: action.payload };\n    case SET_IS_INITIALIZED:\n      return { ...state, isInitialized: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n\nexport const setUser = (payload) => ({ type: SET_USER, payload });\n\nconst setIsInitialized = (payload) => ({\n  type: SET_IS_INITIALIZED,\n  payload,\n});\n\nexport const initializeApp = () => async (dispatch) => {\n  setInterceptor((user) => dispatch(setUser(user)));\n\n  const response = await me();\n\n  if (!response.data) {\n    dispatch(setIsInitialized(true));\n    return;\n  }\n\n  dispatch(setUser(response.data));\n  dispatch(setIsInitialized(true));\n};\n\nexport const changeProfile = (data) => async (dispatch) => {\n  const response = await fetchChangeProfile(data);\n  if (!response.errors.length) {\n    return;\n  }\n\n  const meResponse = await me();\n  if (!meResponse.data) {\n    return;\n  }\n  dispatch(setUser(meResponse.data));\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetchLogout();\n  if (response.errors.length) {\n    return;\n  }\n  dispatch(setUser(null));\n};\n","import Header from './header';\n\nexport default Header;\n","import {\n  AppBar,\n  Avatar,\n  Box,\n  Container,\n  Icon,\n  Link,\n  Toolbar,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport React from 'react';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../store/reducers/app.reducer';\n\nconst Header = () => {\n  const user = useSelector((state) => state.app.user);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  return (\n    <AppBar color=\"secondary\">\n      <Container maxWidth=\"md\">\n        <Toolbar disableGutters variant=\"dense\">\n          <Box display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\n            <Box display=\"flex\" alignItems=\"center\">\n              <Icon>\n                <ChatIcon />\n              </Icon>\n              <Typography align=\"center\" variant=\"h6\">\n                <Box fontWeight={600}>\n                  <Link color=\"inherit\" component={NavLink} to=\"/\">\n                    Readeractive\n                  </Link>\n                </Box>\n              </Typography>\n            </Box>\n\n            {user && (\n              <Link color={theme.palette.background.default}>\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  onClick={() => dispatch(logout())}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <Box marginRight=\"8px\" fontWeight={500}>\n                    Выйти\n                  </Box>\n                  <Avatar\n                    src={user.profile.avatar}\n                    alt=\"User avatar\"\n                    style={{ width: '30px', height: '30px' }}\n                  />\n                </Box>\n              </Link>\n            )}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import instance from '.';\n\nexport const sendMessage = async (message) =>\n  instance.post('messages/', { message });\n","import Message from './message';\n\nexport default Message;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Avatar,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardHeader,\n  Typography,\n} from '@material-ui/core';\nimport moment from 'moment';\n\nconst Message = ({ user, message }) => {\n  return (\n    <Card elevation={0}>\n      <CardActionArea>\n        <CardHeader\n          avatar={<Avatar src={user.profile.avatar || '/broken-image.jpg'} />}\n          title={user.profile.nickname || user.email}\n          subheader={\n            <Typography\n              style={{ fontSize: '13px', wordWrap: 'break-word' }}\n              color=\"primary\"\n            >\n              {moment(message.postedAt).format('LLLL')}\n            </Typography>\n          }\n        />\n        <CardContent>\n          <Typography component=\"div\" style={{ wordWrap: 'break-word' }}>\n            {message.text}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.string,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    profile: PropTypes.shape({\n      avatar: PropTypes.string,\n      nickname: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Message;\n","import Chat from './chat';\n\nexport default Chat;\n","import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\n\nimport { serverURL } from '../../apis';\nimport { sendMessage } from '../../apis/messages.api';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport Message from '../message';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const simpleBarRef = useRef(null);\n\n  const form = useFormik({\n    initialValues: {\n      message: '',\n    },\n    validationSchema: yup.object({\n      message: yup.string().required(),\n    }),\n    onSubmit: ({ message }) => {\n      sendMessage(message);\n    },\n  });\n\n  const scrollTop = () => {\n    const scroll = simpleBarRef.current?.getScrollElement();\n    if (!scroll) {\n      return;\n    }\n    scroll.scrollTo({ top: scroll.scrollHeight, behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    const socket = io(serverURL, { withCredentials: true });\n\n    socket.on('message', (data) => {\n      setMessages((messagesParam) => [...messagesParam, data]);\n      scrollTop();\n    });\n\n    socket.on('connection', (data) => {\n      setMessages((messagesParam) => [\n        ...messagesParam,\n        `${data.profile?.nickname || data.email} зашёл в чат`,\n      ]);\n      scrollTop();\n    });\n\n    socket.on('user-leave', (data) => {\n      setMessages((messagesParam) => [\n        ...messagesParam,\n        `${data.profile?.nickname || data.email} покинул чат`,\n      ]);\n      scrollTop();\n    });\n  }, []);\n\n  return (\n    <Card style={{ height: '100%' }}>\n      <CardHeader style={{ height: '10%' }} title=\"Вы вошли в комнату\" />\n      <SimpleBar style={{ height: '80%' }} ref={simpleBarRef}>\n        {messages.map((el, index) =>\n          typeof el === 'string' ? (\n            <Typography\n              style={{ margin: '40px 0px' }}\n              color=\"textSecondary\"\n              align=\"center\"\n            >\n              {el}\n            </Typography>\n          ) : (\n            <Message key={index} user={el.user} message={el.message} />\n          )\n        )}\n      </SimpleBar>\n      <CardActions\n        disableSpacing\n        style={{ justifyContent: 'space-between', height: '10%' }}\n      >\n        <Box\n          display=\"flex\"\n          component=\"form\"\n          onSubmit={form.handleSubmit}\n          alignItems=\"center\"\n          width=\"100%\"\n        >\n          <TextField\n            fullWidth\n            name=\"message\"\n            value={form.values.message}\n            onChange={form.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n            margin=\"none\"\n            style={{ marginRight: '10px' }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            type=\"submit\"\n            endIcon={<SendIcon />}\n          />\n        </Box>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Chat;\n","import Login from './login';\n\nexport default Login;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormGroup,\n  TextField,\n  Typography,\n  Link,\n  Box,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { NavLink, Redirect } from 'react-router-dom';\n\nimport { fetchSignIn } from '../../apis/auth.api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from '../../store/reducers/app.reducer';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.app.user);\n\n  const form = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: async (values, { setErrors }) => {\n      const response = await fetchSignIn(values);\n\n      if (!response.data) {\n        setErrors(response.errors);\n        console.log(response);\n        return;\n      }\n\n      dispatch(setUser(response.data));\n    },\n  });\n  return user ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Container maxWidth=\"xs\">\n      <Typography variant=\"h5\">Войдите в систему</Typography>\n      <form onSubmit={form.handleSubmit}>\n        <FormGroup>\n          <TextField\n            error={!!form.errors.email}\n            helperText={form.errors.email}\n            value={form.values.email}\n            onChange={form.handleChange}\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n          />\n          <TextField\n            error={!!form.errors.password}\n            helperText={form.errors.password}\n            value={form.values.password}\n            onChange={form.handleChange}\n            label=\"Пароль\"\n            name=\"password\"\n            type=\"password\"\n          />\n          <FormControl margin=\"normal\">\n            <Button type=\"submit\">Отправить</Button>\n          </FormControl>\n          <FormControl>\n            <Box mx=\"auto\">\n              <Link\n                style={{ textAlign: 'center' }}\n                component={NavLink}\n                to=\"/sign-up\"\n              >\n                Нет аккаунта? Создайте его прямо сейчас!\n              </Link>\n            </Box>\n          </FormControl>\n          {form.errors.global && (\n            <FormControl margin=\"normal\">\n              <Alert variant=\"outlined\" severity=\"error\">\n                {form.errors.global}\n              </Alert>\n            </FormControl>\n          )}\n        </FormGroup>\n      </form>\n    </Container>\n  );\n};\n\nexport default Login;\n","import PrivateRoute from './private-route';\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ children, ...props }) => {\n  const user = useSelector((state) => state.app.user);\n  return (\n    <Route {...props}>{user ? children : <Redirect to=\"sign-in\" />}</Route>\n  );\n};\n\nPrivateRoute.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default PrivateRoute;\n","import Thumb from './thumb';\n\nexport default Thumb;\n","import { Avatar } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n\nconst Thumb = ({ image, ...props }) => {\n  const [src, setSrc] = useState(null);\n\n  useEffect(() => {\n    if (!(image instanceof Blob)) {\n      setSrc(image);\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setSrc(reader.result);\n    };\n    reader.readAsDataURL(image);\n  }, [image]);\n\n  return (\n    <Avatar\n      {...props}\n      style={{\n        height: '150px',\n        width: '150px',\n      }}\n      src={src || '/broken-image.jpg'}\n      alt={image?.name}\n    />\n  );\n};\n\nThumb.propTypes = {\n  image: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n};\n\nexport default Thumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Container,\n  FormControl,\n  FormGroup,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport InputMask from 'react-input-mask';\n\nimport Thumb from '../thumb';\n\nconst UserForm = ({ helperValues, onFinish, validationSchema }) => {\n  const form = useFormik({\n    validationSchema,\n    onSubmit: (values) => {\n      let formData = new FormData();\n      for (const key in values) {\n        formData.append(key, values[key]);\n      }\n      onFinish(formData);\n    },\n    initialValues: {},\n  });\n  return (\n    <Container maxWidth=\"xs\">\n      <Typography variant=\"h5\">Создайте свой аккаунт</Typography>\n      <form onSubmit={form.handleSubmit}>\n        <FormGroup>\n          <TextField\n            onChange={form.handleChange}\n            error={form.touched && !!form.errors.email}\n            helperText={form.errors.email}\n            value={form.values.email}\n            name=\"email\"\n            placeholder={helperValues?.email}\n            label=\"Email\"\n          />\n          <TextField\n            onChange={form.handleChange}\n            value={form.values.password}\n            error={form.touched && !!form.errors.password}\n            helperText={form.errors.password}\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n          />\n          <TextField\n            onChange={form.handleChange}\n            value={form.values.nickname}\n            name=\"nickname\"\n            placeholder={helperValues?.nickname}\n            label=\"Прозвище\"\n          />\n          <InputMask\n            onChange={form.handleChange}\n            mask=\"+7 (999) 999 99 99\"\n            value={form.values.phone}\n            name=\"phone\"\n            placeholder={helperValues?.phone}\n            label=\"Номер телефона\"\n            maskChar=\"\"\n          >\n            {(props) => <TextField {...props} />}\n          </InputMask>\n          <FormControl>\n            <Box mx=\"auto\">\n              <Thumb image={form.values.avatar} />\n            </Box>\n          </FormControl>\n          <FormControl margin=\"dense\">\n            <input\n              accept=\"image/*\"\n              id=\"avatar\"\n              onChange={(e) => {\n                form.setFieldValue('avatar', e.currentTarget.files[0]);\n              }}\n              name=\"avatar\"\n              multiple\n              type=\"file\"\n              style={{ display: 'none' }}\n            />\n            <Box mx=\"auto\">\n              <label htmlFor=\"avatar\">\n                <Button\n                  style={{ marginRight: '10px' }}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  component=\"span\"\n                >\n                  Выберите изображение профиля\n                </Button>\n              </label>\n            </Box>\n          </FormControl>\n          <FormControl>\n            <Button variant=\"contained\" type=\"submit\">\n              Отправить\n            </Button>\n          </FormControl>\n        </FormGroup>\n      </form>\n    </Container>\n  );\n};\n\nUserForm.propTypes = {\n  avatar: PropTypes.any,\n  helperValues: PropTypes.shape({\n    email: PropTypes.any,\n    nickname: PropTypes.any,\n    phone: PropTypes.any,\n  }),\n  initialValues: PropTypes.shape({\n    avatar: PropTypes.any,\n  }),\n  onFinish: PropTypes.func,\n  validationSchema: PropTypes.any,\n};\n\nUserForm.defaultProps = {\n  initialValues: {\n    avatar: null,\n  },\n};\n\nexport default UserForm;\n","import UserForm from './user-form';\n\nexport default UserForm;\n","import ChangeUser from './change-user';\n\nexport default ChangeUser;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserForm from '../user-form';\nimport { changeProfile, logout } from '../../store/reducers/app.reducer';\nimport { Box, Button } from '@material-ui/core';\n\nconst ChangeUser = () => {\n  const user = useSelector((state) => state.app.user);\n  const dispatch = useDispatch();\n  const initialValues = {\n    ...user,\n    ...user.profile,\n  };\n\n  console.log(initialValues);\n\n  return (\n    <>\n      <UserForm\n        initialValues={initialValues}\n        onFinish={(data) => dispatch(changeProfile(data))}\n      />\n      <Box mt={1} display=\"flex\" justifyContent=\"center\">\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={() => dispatch(logout())}\n        >\n          Выйти из аккаунта\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default ChangeUser;\n","import React from 'react';\nimport * as yup from 'yup';\n\nimport { fetchSignUp } from '../../apis/auth.api';\nimport UserForm from '../user-form';\n\nconst SignUpUser = () => {\n  const validationSchema = yup.object({\n    avatar: yup.mixed(),\n    email: yup\n      .string()\n      .email('Некорректный email')\n      .required('Email обязательное поле'),\n    password: yup\n      .string()\n      .min(10, 'Пароль должен содержать минимум 10 символов')\n      .required('Пароль обязательное поле'),\n  });\n\n  return (\n    <UserForm\n      validationSchema={validationSchema}\n      onFinish={(data) => {\n        fetchSignUp(data);\n        history.push('/');\n      }}\n    />\n  );\n};\n\nexport default SignUpUser;\n","import Content from './content';\n\nexport default Content;\n","import { Box, Container } from '@material-ui/core';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from '../header';\n\nimport Chat from '../chat';\nimport Login from '../login';\nimport PrivateRoute from '../private-route';\nimport UserForm from '../user-form';\nimport ChangeUser from '../change-user';\nimport SignUpUser from '../sign-up-user/sign-up-user';\n\nconst Content = () => {\n  return (\n    <>\n      <Header />\n      <Box height=\"calc(100vh - 70px)\" marginTop=\"60px\" mb=\"10px\">\n        <Container style={{ height: 'inherit' }} maxWidth=\"md\">\n          <Switch>\n            <Route path=\"/sign-in\">\n              <Login />\n            </Route>\n            <PrivateRoute path=\"/update\">\n              <UserForm type=\"update\" />\n            </PrivateRoute>\n            <Route path=\"/sign-up\">\n              <SignUpUser />\n            </Route>\n            <PrivateRoute path=\"/change-profile\">\n              <ChangeUser />\n            </PrivateRoute>\n            <PrivateRoute path=\"/\">\n              <Chat />\n            </PrivateRoute>\n          </Switch>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Content;\n","import App from './app';\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { grey, orange } from '@material-ui/core/colors';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  useMediaQuery,\n  CssBaseline,\n  CircularProgress,\n  Grid,\n} from '@material-ui/core';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'moment/locale/ru';\nimport moment from 'moment';\n\nimport { initializeApp } from '../../store/reducers/app.reducer';\nimport Content from '../content';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTimeout(() => dispatch(initializeApp()), 2000);\n  }, []);\n\n  const isInitialized = useSelector((state) => state.app.isInitialized);\n  const isDark = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = createMuiTheme({\n    palette: {\n      type: isDark ? 'dark' : 'light',\n      primary: {\n        main: orange[800],\n      },\n      secondary: {\n        main: isDark ? grey[50] : grey[900],\n      },\n    },\n    overrides: {\n      MuiButton: {\n        sizeSmall: {\n          height: '40px',\n        },\n      },\n    },\n    props: {\n      MuiTextField: {\n        size: 'small',\n        variant: 'outlined',\n        color: 'primary',\n      },\n      MuiFormControl: {\n        margin: 'normal',\n      },\n      MuiButton: {\n        variant: 'contained',\n        color: 'primary',\n        size: 'small',\n      },\n    },\n  });\n  moment.locale('ru');\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        {isInitialized ? (\n          <Content />\n        ) : (\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '80vh' }}\n          >\n            <Grid item>\n              <CircularProgress />\n            </Grid>\n          </Grid>\n        )}\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import appReducer from './app.reducer';\n\nconst reducers = {\n  app: appReducer,\n};\n\nexport default reducers;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst reducer = combineReducers(reducers);\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app';\nimport reportWebVitals from './bin/report-web-vitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nwindow.getState = store.getState;\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}